body {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 20px;
  box-sizing: border-box;
}

/* Title for the page */
.title {
  color: white;
  text-align: center;
  margin-bottom: 20px;
  font-size: 28px;
}

/* Form container */
.form-container {
  background-color: rgba(26, 45, 67, 0.7);
  border-radius: 10px;
  padding: 20px;
  width: 90%;
  max-width: 500px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.inputContainer {
  position: relative;
  display: block;
  margin: 15px 0;
  text-align: center;
}

.inputLabel {
  display: block;
  color: #bb9839;
  margin-bottom: 8px;
  font-size: x-large;
  font-weight: bold;
  text-align: left;
}

input,
select {
  width: 100%;
  height: 40px;
  padding: 8px 12px;
  border: 2px solid rgba(187, 152, 57, 0.5);
  border-radius: 5px;
  background-color: rgba(255, 255, 255, 0.9);
  color: #1a2d43;
  font-size: 16px;
  transition: all 0.3s ease;
  box-sizing: border-box;
}

input:focus,
select:focus {
  border-color: #bb9839;
  outline: none;
  box-shadow: 0 0 5px rgba(187, 152, 57, 0.5);
}

input::placeholder {
  color: #777;
}

.button-container {
  display: flex;
  justify-content: space-between;
  margin-top: 25px;
  width: 100%;
}

.navButton {
  width: 100%;
  height: auto;
  padding: 20px 40px;
  margin: 10px 5px;
  position: inherit;
}

.primary-button {
  background-color: #d4ae4c;
  color: #000;
}

@media screen and (max-width: 800px) {
  .inputLabel {
    font-size: large;
  }

  .form-container {
    width: 95%;
    padding: 15px;
  }

  .navButton {
    padding: 15px 20px;
  }

  .button-container {
    flex-wrap: wrap;
  }
}

@media screen and (max-width: 480px) {
  .button-container {
    flex-direction: column;
  }

  .navButton {
    width: 100%;
    margin: 5px 0;
  }
}



/* From Uiverse.io by cbolson */ 
.switch {
  --_switch-bg-clr: #bb9839;
  --_switch-padding: 4px; /* padding around button*/
  --_slider-bg-clr: rgba(12, 74, 110, 0.849); /* slider color unchecked */
  --_slider-bg-clr-on: rgba(12, 74, 110, 1); /* slider color checked */
  --_slider-txt-clr: #ffffff;
  --_label-padding: 1rem 2rem; /* padding around the labels -  this gives the switch it's global width and height */
  --_switch-easing: cubic-bezier(
    0.47,
    1.64,
    0.41,
    0.8
  ); /* easing on toggle switch */
  color: white;
  width: 100%;
  display: flex;
  justify-content: center;
  position: relative;
  border-radius: 9999px;
  cursor: pointer;
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  position: relative;
  isolation: isolate;
}

.switch:has(input:disabled){
  --_switch-bg-clr: #b0b0b0;
  --_switch-padding: 4px; /* padding around button*/
  --_slider-bg-clr: rgba(120, 120, 120, 0.6); /* slider color unchecked */
  --_slider-bg-clr-on: rgba(100, 100, 100, 1); /* slider color checked */
  --_slider-txt-clr: #ffffff;
  --_label-padding: 0.4rem 0.8rem; /* padding around the labels -  this gives the switch it's global width and height */
  --_switch-easing: cubic-bezier(
    0.47,
    1.64,
    0.41,
    0.8
  ); /* easing on toggle switch */
  color: white;
  width: 100%;
  display: flex;
  justify-content: center;
  position: relative;
  border-radius: 9999px;
  cursor: pointer;
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  position: relative;
  isolation: isolate;
}

.switch input[type="checkbox"] {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.switch > span {
  display: grid;
  place-content: center;
  transition: opacity 300ms ease-in-out 150ms;
  padding: var(--_label-padding);
}
.switch::before,
.switch::after {
  content: "";
  position: absolute;
  border-radius: inherit;
  transition: inset 150ms ease-in-out;
  inset: var(--switch-padding) ;
}
/* switch slider */
.switch::before {
  background-color: var(--_slider-bg-clr);
  inset: var(--_switch-padding) 50% var(--_switch-padding)
    var(--_switch-padding);
  transition:
    inset 500ms var(--_switch-easing),
    background-color 500ms ease-in-out;
  z-index: -1;
  box-shadow:
    inset 0 1px 1px rgba(0, 0, 0, 0.3),
    0 1px rgba(255, 255, 255, 0.3);
}
/* switch bg color */
.switch::after {
  background-color: var(--_switch-bg-clr);
  inset: 0;
  z-index: -2;
}
/* switch hover & focus */
.switch:focus-within::after {
  inset: -0.25rem;
}
.switch:has(input:checked):hover > span:first-of-type,
.switch:has(input:not(:checked)):hover > span:last-of-type {
  opacity: 1;
  transition-delay: 0ms;
  transition-duration: 100ms;
}
/* switch hover */
.switch:has(input:checked):hover::before {
  inset: var(--_switch-padding) var(--_switch-padding) var(--_switch-padding)
    45%;
}
.switch:has(input:not(:checked)):hover::before {
  inset: var(--_switch-padding) 45% var(--_switch-padding)
    var(--_switch-padding);
}
/* checked - move slider to right */
.switch:has(input:checked)::before {
  background-color: var(--_slider-bg-clr-on);
  inset: var(--_switch-padding) var(--_switch-padding) var(--_switch-padding)
    50%;
}
/* checked - set opacity */
.switch > span:last-of-type,
.switch > input:checked + span:first-of-type {
  opacity: 0.75;
}
.switch > input:checked ~ span:last-of-type {
  opacity: 1;
}
.switch::before,
.switch::after {
  transform: scaleY(0.7);
  transform-origin: center;
}